class SocketTest
{
    def main():static {
        sockfd:int = socket(AF_UNIX, SOCK_STREAM, 0);

        address: sockaddr_un = sockaddr_un();

        address.sun_family = AF_UNIX;
        address.sun_path = "server_socket";

        connect(sockfd, address);

        write(sockfd, b"ABC", 3);
        buf := Buffer(128);
        read(sockfd, buf, 3);

        printf("char from server %s\n", array { buf.toString() });

        close(sockfd);
    }

    def server():static {
        try { 
            unlink("server_socket");
        } catch(e:Exception) {
        }

        server_sockfd := socket(AF_UNIX, SOCK_STREAM, 0);

        server_address := sockaddr_un();
        server_address.sun_family = AF_UNIX;
        server_address.sun_path = "server_socket";

        bind(server_sockfd, server_address);

        listen(server_sockfd, 5);
        while(true) {
            println("server waiting");

            client_address := sockaddr_un();

            client_sockfd := accept(server_sockfd, client_address);

            buf := Buffer(128);
            read(client_sockfd, buf, 3);
            write(client_sockfd, buf, 3);

            close(client_sockfd);
            exit(0);
        }
    }

    def main_inet():static {
        sockfd:int = socket(AF_INET, SOCK_STREAM, 0);

        address := sockaddr_in();
        address.sin_family = AF_INET;
        address.sin_addr.s_addr = inet_addr("127.0.0.1");
        address.sin_port = 9734;

        connect(sockfd, address);

        write(sockfd, b"ABC", 3);
        buf := Buffer(128);
        read(sockfd, buf, 3);

        printf("char from server %s\n", array { buf.toString() });

        close(sockfd);
    }

    def server_inet():static {
        server_sockfd := socket(AF_INET, SOCK_STREAM, 0);

        server_address := sockaddr_in();
        server_address.sin_family = AF_INET;
        server_address.sin_addr.s_addr = inet_addr("127.0.0.1");
        server_address.sin_port = 9734;

        bind(server_sockfd, server_address);

        listen(server_sockfd, 5);
        while(true) {
            println("server waiting");

            client_address := sockaddr_un();

            client_sockfd := accept(server_sockfd, client_address);

            buf := Buffer(128);
            read(client_sockfd, buf, 3);
            write(client_sockfd, buf, 3);

            close(client_sockfd);
            exit(0);
        }
    }
}

