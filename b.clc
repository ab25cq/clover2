class JITTest 
{
    field1: int;

    def initialize() {
        self.field1 = 123;
    }

    def run(): jit int {
        return 3+1;
    }

    def run2():jit String {
        return "ABC";
    }

    def run3():jit int {
        return 3+1;
    }

    def run4():jit {
        System.println("HELLO WORLD");
    }

    def run5():jit double {
        return System.strtod("123.1");
    }

    def run6(): jit int {
        a:int = 123;
        return a + 1;
    }

    def method(): String {
        return "ABC";
    }

    def run7():jit String {
        return self.method().append("DEF");
    }

    def run8(): jit {
        throw new Exception("JIT throw test");
    }

    def run9(): jit bool {
        a:int = 1;
        b:bool = a == 1;

        return b;
    }

    def run10(): jit int {
        a:int = 1;
        a.to_bool && ((a = 2).to_bool);
        
        return a;
    }

    def run11(): jit int {
        a:int = 1;
        a.to_bool || ((a = 2).to_bool);

        return a;
    }

    def run12(): jit int {
        a:int = 1;
        if(a == 1) {
            return 2;
        }
        else {
            return 3;
        }

        return a;
    }

    def run13(): jit int {
        a:int = 0;

        for(i:int=0; i<3; i++) {
            a++;
        }

        return a;
    }

    def run14(): jit int {
        a:int = 0;

        while(true) {
            a++;

            if(a == 1) {
                break;
            }
        }

        return a;
    }

    def run15(): jit int {
        return self.field1;
    }

    def run16(): jit {
        throw new Exception("exception");
    }

    def run17(): jit int {
        print("jit test14...");
        try {
            self.run16();
        }
        catch(e:Exception) {
            println("OK");
        }
    }

    def run18(): jit regex {
        return /./;
    }

    def run19(): jit bool {
        return /./ == /./;
    }

    def run20(): jit bool {
        return /../ != /./;
    }

    def run21(): jit byte {
        a:byte = 1y;
        b:byte = 2y;

        return a + b;
    }
    def run22(): jit byte {
        a:byte = 1;

        return a;
    }
    def run23(): jit byte {
        a:byte = 1;

        return a;
    }
    def run24(): jit int {
        a:byte = 123;

        return a;
    }
    def run25(): jit int {
        a:byte = 123y;
        b:byte = 123y;

        return a + b;
    }
    def run26(): jit int {
        a:byte = 123y;
        b:byte = 23y;

        return a - b;
    }
    def run27(): jit byte {
        a:byte = 1;
        b:byte = 2;

        return a * b;
    }
    def run28(): jit byte {
        a:byte = 9;
        b:byte = 3;

        return a / b;
    }
    def run29(): jit byte {
        a:byte = 5;
        b:byte = 3;

        return a % b;
    }
    def run30(): jit byte {
        return 1y << 1y;
    }
    def run31(): jit byte {
        return 2y >> 1y;
    }
    def run32(): jit byte {
        return 011y & 01y;
    }
    def run33(): jit byte {
        return 0x01y | 0x02y;
    }
    def run34(): jit byte {
        return 0x07y ^ 0x01y;
    }
    def run35(): jit long {
        return 1l + 2l;
    }
}
