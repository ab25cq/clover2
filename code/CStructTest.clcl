__BEGIN__
CLang.include("code/CStruct.h");
__END__

class CStructTest {
    def method(c:char):static {
        c.toString().println();
    }
    def method():static {
        data := CStruct();

        data.a->byte = 'C';
        data.b->int = 123;
        data.c->long = 234;

        Clover.test("struct test1", data.a->byte == 'C' && data.b->int == 123 && data.c->long == 234);
        
        C.fun(data);

        data2 := byte[5]();

        data2[0] = 'A';
        data2[1] = 'B';
        data2[2] = 'C';
        data2[3] = 'D';
        data2[4] = 'E';

        C.fun2(data2);

        C.fun3(1, 2);

        data3 := byte[3]();

        data3[0] = 'A';
        data3[1] = 'B';
        data3[2] = 'C';

        C.fun4(data3);

        data4 := CStruct();

        data4.a->byte = 'C';
        data4.b->int = 123;
        data4.c->long = 234;

        C.fun5(data4);

        Clover.test("strcut test6", C.strcmp(C.fun6(), C"fun6") == 0);

        data5 := C.fun7();
        C.fun8(c"ABC");

        data6 := C.fun9(2, 3);

        Clover.test("struct test9", data6 == 5);
    }
}
