class AndAndOrOrTest 
{
    def method1():static bool {
        return true;
    }

    def method2():static bool {
        return false;
    }

    def method3(): static int {
        return -1;
    }

    def main():static {
        Clover.test("andand test1", 1 < 2 && 3 < 4);
        Clover.test("andand test2", 1.1 < 20.0 && 1.1 < 20.0);
        Clover.test("andand test3", 1.1f < 20.0f && 1.1f < 20.0f);
        Clover.test("andand test4", 1 < 2 && true && 3 < 4 && 1 < 2);
        Clover.test("andand test5", AndAndOrOrTest.method1() && 1 < 2 && 3 < 4);
        left:int = 1;
        right:int = 2;
        Clover.test("andand test6", left != right && 1 < 2);
        Clover.test("andand test7", AndAndOrOrTest.method3() <= 0 && left < right);
        Clover.test("andand test8", !(-1 >= 0));
        Clover.test("andand test9", !((-1 >= 0) && (left < right)));
        Clover.test("andand test10", !((AndAndOrOrTest.method3() >= 0) && (left < right)));
        Clover.test("andand test11", (AndAndOrOrTest.method3() < 0) && (left < right));
        Clover.test("andand test12", !(left > right && true));

        Clover.test("oror test1", 1 < 2 || 5 < 4);
        Clover.test("oror test2", 1.1 < 20.0 || 30.0 < 20.0);
        Clover.test("oror test3", 1.1f < 20.0f || 30.0f < 20.0f);
        Clover.test("oror test4", 4 < 2 || 3 > 1);
        Clover.test("oror test5", AndAndOrOrTest.method2() || 1 < 2);
        Clover.test("oror test6", AndAndOrOrTest.method1() || 3 < 5);
        left = 1;
        right = 2;
        Clover.test("oror test7", left != right || left > right);
        Clover.test("oror test7", AndAndOrOrTest.method3() <= 0 || left < right);
        Clover.test("oror test8", !((-1 >= 0) && (left < right)));
        Clover.test("oror test9", !((AndAndOrOrTest.method3() >= 0) || (left > right)));

/*
        y := 123;
        start := 122;
        end := 250;

        Clover.test("oror test10", y >= start && y <= end || y >= end && y <= start);

        y = 123;
        start = 150;
        end = 120;

        Clover.test("oror test11", y >= start && y <= end || y >= end && y <= start);

        Clover.test("oror test12", 111 == 112 || 111 == 111 && 12 == 12);
*/
    }
}
