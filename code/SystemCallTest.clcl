class SystemCallTest
{
    def main(): static {
        f := System.fopen("sys.txt", "w");
        System.fwrite(b"ABCDEF", 3, f);
        System.fclose(f);

        Clover.test("sys call test", p"sys.txt".read().equals(b"ABC"));
        
        g := System.fopen("sys.txt", "r");
        buf := new Buffer(30);
        System.fread(buf, 30, g);
        System.fclose(g);
        
        Clover.test("sys call test2", buf.equals(b"ABC"));

        c := new ULong(123);

        Clover.test("sys call test3", c == 123);

        #d := new Float(123.0f);

        #Clover.test("sys call test4", d == 123.0f);

        e := System.fopen("sys.txt", "r");

        h := new Buffer(120);

        System.fgets(h, 30, e)

        System.fclose(e);

        Clover.test("system call test5", h.toString().equals("ABC"));

        e = System.fopen("sys.txt", "r");

        i := System.fgetc(e);

        System.fclose(e);

        Clover.test("system call test6", i.to_char == 'A');

        e = System.fopen("sys.txt", "r");

        i = System.fgetc(e);

        System.ungetc(i, e);

        i = System.fgetc(e);

        Clover.test("system call test7", i.to_char == 'A');

        System.fclose(e);

        j:pointer = malloc(10);
        strncpy(j, b"AAA\0".buffer, 10);

        Clover.test("system call test8", j->byte == 'A' && (j+1)->byte == 'A' && (j+2)->byte == 'A' && (j+3)->byte == '\0');

        strncat(j, b"B\0".buffer, 10);

        Clover.test("system call test9", j->byte == 'A' && (j+1)->byte == 'A' && (j+2)->byte == 'A' && (j+3)->byte == 'B' && (j+4)->byte == '\0');

        free(j);

        buf2 := b"ABC";

        Clover.test("system call test10", strchr(buf2.toPointer(), 'B'.to_byte) == buf2.toPointer() + 1);
    }
}
