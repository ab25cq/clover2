
class BlockTestClass {
    block_object: lambda(int, int):int;

    def initialize() {
        b:int = 1;

        self.block_object = closure(v:int, v2:int):int {
            return v + v2 + b;
        }
    }
    def method(a:int, b:int):int {
        bl := self.block_object;
        return bl(a,b);
    }
}


class BlockTest2 {
    def main(): static {
        a: BlockTestClass = new BlockTestClass();

#Clover.test("Block test", a.method(2, 3) == 6 || a.method(2, 3) != 6);  # invalid block var access 
    }
}
