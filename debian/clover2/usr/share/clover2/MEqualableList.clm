Container.clcl
820

    def equals(right:SELF<T>):bool {
        if(right.is("WildCard")) {
            return true;
        }
        else {
            if(self.number != right.number) {
                return false;
            }
            for(i:int =0; i<self.number; i++) {
                if(!self.items(i).equals(right.items(i))) {
                    return false;
                }
            }

            return true;
        }
    }

    def equals(right:WildCard): bool {
        return true;
    }

    def delete(item:T):SELF<T> {
        it:ListItem<T>? = self.head;
        it2:ListItem<T>? = self.head;

        while(!it.identifyWith(null)) {
            if(it.item.equals(item)) {
                
                if(it.identifyWith(self.head) && it.identifyWith(self.tail)) {
                    self.head = null;
                    self.tail = null;
                    self.number = 0;
                }
                
                elif(it2.identifyWith(self.head) && it.identifyWith(self.tail)) {
                    self.head = it2;
                    self.tail = it2;
                    it2.prev = null;
                    it2.next = null;
                    self.number = 1;
                }
                
                else {
                    if(it.identifyWith(self.head)) {
                        self.head = self.head.next;
                        self.head.prev = null;
                        self.number--;
                    }
                    elif(it.identifyWith(self.tail)) {
                        self.tail = self.tail.prev;
                        self.tail.next = null;
                        self.number--;
                    }
                    else {
                        it2.next = it.next;
                        it.next.prev = it2;
                        self.number--;
                    }
                }
                break;
            }
            
            it2 = it;
            it = it.next;
        }

        return self;
    }

    def indexOf(item:T):int {
        result:int = 0;

        it:ListItem<T>? = self.head;
        while(!it.identifyWith(null)) {
            if(it.item.equals(item)) {
                return result;
            }

            result++;

            it = it.next;
        }

        return -1;
    }
    def toString():String {
        if(self.number == 0) {
            return "elist {}";
        }

        result:String = "elist {";

        it:ListItem<T>? = self.head;

        while(!it.identifyWith(null)) {
            result.append(it.item.toString());
            result.append(",");

            it = it.next;
        }

        result.replace(-1, '}');

        return result;
    }
    def join(separator:String):String {
        result:String = new String("");
        it :ListItem<T>? = self.head;

        while(!it.identifyWith(null)) {
            result.append(it.item.toString());
            it = it.next;

            if(!it.identifyWith(null)) {
                result.append(separator);
            }
        }

        return result;
    }

    def join():String {
        return self.join("");
    }

    def count(item:T):int {
        result:int = 0;

        it :ListItem<T>? = self.head;

        while(!it.identifyWith(null)) {
            if(it.item.equals(item)) {
                result++;
            }

            it = it.next;
        }

        return result;
    }

    def indexOf(item:T):int {
        result:int = 0;
        it :ListItem<T>? = self.head;

        while(!it.identifyWith(null)) {
            if(it.item.equals(item)) {
                return result;
            }
            result++;
            it = it.next;
        }

        return -1;
    }
