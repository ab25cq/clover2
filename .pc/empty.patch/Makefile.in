#######################################################
# installed directories
#######################################################
prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
datadir=@datadir@
mandir=@mandir@
sharedstatedir=@sharedstatedir@
sysconfdir=@sysconfdir@/clover2
includedir=@includedir@/clover2
datarootdir=@datarootdir@/clover2
docdir=@datadir@/doc

##########################################################
# environmnet variables
##########################################################
CC=@CC@
CXX=@CXX@
INSTALL=@INSTALL@
CFLAGS=@CFLAGS@
CXXFLAGS=@CXXFLAGS@
LIBS=@LIBS@
OS=@OS@
DESTDIR=@prefix@
OBJS=@OBJS@
COMPILER_OBJS=@COMPILER_OBJS@
JIT_OBJS=@JIT_OBJS@
JIT_RUNTIME_OBJS=@JIT_RUNTIME_OBJS@
COMMON_OBJS=@COMMON_OBJS@
INTERPRETER=@INTERPRETER@
JIT=@JIT@

##########################################################
# main
##########################################################
all: cclover2 clover2 $(INTERPRETER) SortableArray.oclcl
	if which ctags > /dev/null; then if test $(OS) = DARWIN; then ctags src/*.c > /dev/null 2>&1; else ctags -R; fi; fi

cclover2: config.h src/compiler.o $(COMMON_OBJS) $(COMPILER_OBJS) $(JIT_OBJS)
	if test $(JIT) = 1; then $(CXX) -o cclover2 src/compiler.o $(COMMON_OBJS) $(COMPILER_OBJS) $(JIT_OBJS) $(CFLAGS) $(LIBS) $(CXXFLAGS); else $(CC) -o cclover2 src/compiler.o $(COMMON_OBJS) $(COMPILER_OBJS) $(CFLAGS) $(LIBS); fi

src/script_ctime.o: config.h src/script_ctime.c
	$(CC) -c -o src/script_ctime.o src/script_ctime.c $(CFLAGS:-O3=)

clover2: config.h src/main.o $(COMMON_OBJS) $(OBJS) $(JIT_RUNTIME_OBJS)
	if test $(JIT) = 1; then $(CXX) -o clover2 src/main.o $(COMMON_OBJS) $(OBJS) $(JIT_RUNTIME_OBJS) $(CFLAGS) $(LIBS) $(CXXFLAGS); else $(CC) -o clover2 src/main.o $(COMMON_OBJS) $(OBJS) $(CFLAGS) $(LIBS); fi

iclover2: config.h src/interpreter.o $(COMMON_OBJS) $(OBJS) $(COMPILER_OBJS) $(JIT_RUNTIME_OBJS)
	if test $(JIT) = 1; then $(CXX) -o iclover2 src/interpreter.o $(COMMON_OBJS) $(OBJS) $(COMPILER_OBJS) $(JIT_RUNTIME_OBJS) $(CFLAGS) $(LIBS) $(CXXFLAGS); else $(CC) -o iclover2 src/interpreter.o $(COMMON_OBJS) $(OBJS) $(COMPILER_OBJS) $(CFLAGS) $(LIBS); fi

SortableArray.oclcl: Fundamental.clcl String.clcl Container.clcl CLParser.clcl Range.clcl Command.clcl File.clcl MyOwnLibrary.clcl
	./cclover2 -core MyOwnLibrary.clcl

#########################################################
# Object files
#########################################################
$(OBJ): src/*.h Makefile configure

#########################################################
# install
#########################################################
install:
	mkdir -p $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 PcreOVec.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 System.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Clover.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Global.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 String.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Buffer.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Exception.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Object.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Byte.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 UByte.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Short.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 UShort.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Integer.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 UInteger.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Long.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ULong.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Float.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Double.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Pointer.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Char.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Bool.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Array.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 EqualableArray.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 SortableArray.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 IHashKey.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 IEqualable.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ISortable.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 HashItem.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Hash.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ListItem.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 List.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 EqualableList.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 SortableList.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple1.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple2.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple3.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple4.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple5.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple6.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple7.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple8.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple9.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple10.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 File.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Path.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Directory.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 termios.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Job.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Command.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 tm.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 timespec.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 stat.oclcl $(DESTDIR)/share/clover2

	if test $(JIT) = 1;then llvm-dis Clover.bc && $(INSTALL) -m 644 Clover.bc $(DESTDIR)/share/clover2; fi
	if test -e libClover.so; then $(INSTALL) -m 755 libClover.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libClover.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Global.bc && $(INSTALL) -m 644 Global.bc $(DESTDIR)/share/clover2; fi
	if test -e libGlobal.so; then $(INSTALL) -m 755 libGlobal.so.1.0.0 $(DESTDIR)/share/clover2/; cp -a libGlobal.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis String.bc && $(INSTALL) -m 644 String.bc $(DESTDIR)/share/clover2; fi
	if test -e libString.so; then $(INSTALL) -m 755 libString.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libString.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Buffer.bc && $(INSTALL) -m 644 Buffer.bc $(DESTDIR)/share/clover2; fi
	if test -e libBuffer.so; then $(INSTALL) -m 755 libBuffer.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libBuffer.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Byte.bc && $(INSTALL) -m 644 Byte.bc $(DESTDIR)/share/clover2; fi
	if test -e libByte.so; then $(INSTALL) -m 755 libByte.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libByte.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis UByte.bc && $(INSTALL) -m 644 UByte.bc $(DESTDIR)/share/clover2; fi
	if test -e libUByte.so; then $(INSTALL) -m 755 libUByte.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libUByte.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Short.bc && $(INSTALL) -m 644 Short.bc $(DESTDIR)/share/clover2; fi
	if test -e libShort.so; then $(INSTALL) -m 755 libShort.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libShort.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis UShort.bc && $(INSTALL) -m 644 UShort.bc $(DESTDIR)/share/clover2; fi
	if test -e libUShort.so; then $(INSTALL) -m 755 libUShort.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libUShort.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Integer.bc && $(INSTALL) -m 644 Integer.bc $(DESTDIR)/share/clover2; fi
	if test -e libInteger.so; then $(INSTALL) -m 755 libInteger.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libInteger.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis UInteger.bc && $(INSTALL) -m 644 UInteger.bc $(DESTDIR)/share/clover2; fi
	if test -e libUInteger.so; then $(INSTALL) -m 755 libUInteger.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libUInteger.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Long.bc && $(INSTALL) -m 644 Long.bc $(DESTDIR)/share/clover2; fi
	if test -e libLong.so; then $(INSTALL) -m 755 libLong.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libLong.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis ULong.bc && $(INSTALL) -m 644 ULong.bc $(DESTDIR)/share/clover2; fi
	if test -e libULong.so; then $(INSTALL) -m 755 libULong.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libULong.so $(DESTDIR)/share/clover2; fi
	if test $(JIT) = 1;then llvm-dis Float.bc && $(INSTALL) -m 644 Float.bc $(DESTDIR)/share/clover2; fi
	if test -e libFloat.so; then $(INSTALL) -m 755 libFloat.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libFloat.so $(DESTDIR)/share/clover2; fi
	if test $(JIT) = 1;then llvm-dis Double.bc && $(INSTALL) -m 644 Double.bc $(DESTDIR)/share/clover2; fi
	if test -e libDouble.so; then $(INSTALL) -m 755 libDouble.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libDouble.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Pointer.bc && $(INSTALL) -m 644 Pointer.bc $(DESTDIR)/share/clover2; fi
	if test -e libPointer.so; then $(INSTALL) -m 755 libPointer.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libPointer.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Char.bc && $(INSTALL) -m 644 Char.bc $(DESTDIR)/share/clover2; fi
	if test -e libChar.so; then $(INSTALL) -m 755 libChar.so.1.0.0; cp -a libChar.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Bool.bc && $(INSTALL) -m 644 Bool.bc $(DESTDIR)/share/clover2; fi
	if test -e libBool.so; then $(INSTALL) -m 755 libBool.so.1.0.0; cp -a libBool.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Array.bc && $(INSTALL) -m 644 Array.bc $(DESTDIR)/share/clover2; fi
	if test -e libArray.so; then $(INSTALL) -m 755 libArray.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libArray.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis EqualableArray.bc && $(INSTALL) -m 644 EqualableArray.bc $(DESTDIR)/share/clover2; fi
	if test -e libEqualableArray.so; then $(INSTALL) -m 755 libEqualableArray.so.1.0.0; cp -a libEqualableArray.so $(DESTDIR)/share/clover2/; fi

	if test $(JIT) = 1;then llvm-dis SortableArray.bc && $(INSTALL) -m 644 SortableArray.bc $(DESTDIR)/share/clover2; fi
	if test -e libSortableArray.so; then $(INSTALL) -m 755 libSortableArray.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libSortableArray.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Hash.bc && $(INSTALL) -m 644 Hash.bc $(DESTDIR)/share/clover2; fi
	if test -e libHash.so; then $(INSTALL) -m 755 libHash.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libHash.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis List.bc && $(INSTALL) -m 644 List.bc $(DESTDIR)/share/clover2; fi
	if test -e libList.so; then $(INSTALL) -m 755 libList.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libList.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis EqualableList.bc && $(INSTALL) -m 644 EqualableList.bc $(DESTDIR)/share/clover2; fi
	if test -e libEqualableList.so; then $(INSTALL) -m 755 libEqualableList.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libEqualableList.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis SortableList.bc && $(INSTALL) -m 644 SortableList.bc $(DESTDIR)/share/clover2; fi
	if test -e libSortableList.so; then $(INSTALL) -m 755 libSortableList.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libSortableList.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Tuple1.bc && $(INSTALL) -m 644 Tuple1.bc $(DESTDIR)/share/clover2; fi
	if test -e libTuple1.so; then $(INSTALL) -m 755 libTuple1.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libTuple1.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Tuple2.bc && $(INSTALL) -m 644 Tuple2.bc $(DESTDIR)/share/clover2; fi
	if test -e libTuple2.so; then $(INSTALL) -m 755 libTuple2.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libTuple2.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Tuple3.bc && $(INSTALL) -m 644 Tuple3.bc $(DESTDIR)/share/clover2; fi
	if test -e libTuple3.so; then $(INSTALL) -m 755 libTuple3.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libTuple3.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Tuple4.bc && $(INSTALL) -m 644 Tuple4.bc $(DESTDIR)/share/clover2; fi
	if test -e libTuple4.so; then $(INSTALL) -m 755 libTuple4.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libTuple4.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Tuple5.bc && $(INSTALL) -m 644 Tuple5.bc $(DESTDIR)/share/clover2; fi
	if test -e libTuple5.so; then $(INSTALL) -m 755 libTuple5.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libTuple5.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Tuple6.bc && $(INSTALL) -m 644 Tuple6.bc $(DESTDIR)/share/clover2; fi
	if test -e libTuple6.so; then $(INSTALL) -m 755 libTuple6.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libTuple6.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Tuple7.bc && $(INSTALL) -m 644 Tuple7.bc $(DESTDIR)/share/clover2; fi
	if test -e libTuple7.so; then $(INSTALL) -m 755 libTuple7.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libTuple7.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Tuple8.bc && $(INSTALL) -m 644 Tuple8.bc $(DESTDIR)/share/clover2; fi
	if test -e libTuple8.so; then $(INSTALL) -m 755 libTuple8.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libTuple8.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Tuple9.bc && $(INSTALL) -m 644 Tuple9.bc $(DESTDIR)/share/clover2; fi
	if test -e libTuple9.so; then $(INSTALL) -m 755 libTuple9.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libTuple9.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Tuple10.bc && $(INSTALL) -m 644 Tuple10.bc $(DESTDIR)/share/clover2; fi
	if test -e libTuple10.so; then $(INSTALL) -m 755 libTuple10.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libTuple10.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis File.bc && $(INSTALL) -m 644 File.bc $(DESTDIR)/share/clover2; fi
	if test -e libFile.so; then $(INSTALL) -m 755 libFile.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libFile.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Path.bc && $(INSTALL) -m 644 Path.bc $(DESTDIR)/share/clover2; fi
	if test -e libPath.so; then $(INSTALL) -m 755 libPath.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libPath.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Directory.bc && $(INSTALL) -m 644 Directory.bc $(DESTDIR)/share/clover2; fi
	if test -e libDirectory.so; then $(INSTALL) -m 755 libDirectory.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libDirectory.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Job.bc && $(INSTALL) -m 644 Job.bc $(DESTDIR)/share/clover2; fi
	if test -e libJob.so; then $(INSTALL) -m 755 libJob.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libJob.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis Command.bc && $(INSTALL) -m 644 Command.bc $(DESTDIR)/share/clover2; fi
	if test -e libCommand.so; then $(INSTALL) -m 755 libCommand.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libCommand.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis tm.bc && $(INSTALL) -m 644 tm.bc $(DESTDIR)/share/clover2; fi
	if test -e libtm.so; then $(INSTALL) -m 755 libtm.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libtm.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis timespec.bc && $(INSTALL) -m 644 timespec.bc $(DESTDIR)/share/clover2; fi
	if test -e libtimespec.so; then $(INSTALL) -m 755 libtimespec.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libtimespec.so $(DESTDIR)/share/clover2; fi

	if test $(JIT) = 1;then llvm-dis stat.bc && $(INSTALL) -m 644 stat.bc $(DESTDIR)/share/clover2; fi
	if test -e libstat.so; then $(INSTALL) -m 755 libstat.so.1.0.0 $(DESTDIR)/share/clover2; cp -a libstat.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 MArray.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 MArray.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 MEqualableArray.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 MEqualableList.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 MInclude.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 MList.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 MPrintOutObject.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 MWrapperClassBase.clm $(DESTDIR)/share/clover2

	mkdir -p "$(DESTDIR)/bin"
	$(INSTALL) -m 755 clover2 "$(DESTDIR)/bin"
	$(INSTALL) -m 755 cclover2 "$(DESTDIR)/bin"
	if test -e ./iclover2; then $(INSTALL) -m 755 iclover2 "$(DESTDIR)/bin"; fi

	mkdir -p $(DESTDIR)/share/doc/clover2
	$(INSTALL) -m 644 manual/*.md "$(DESTDIR)/share/doc/clover2"

#########################################################
# uninstall
#########################################################
uninstall:
	rm -f "$(DESTDIR)"/bin/clover2
	rm -f "$(DESTDIR)"/bin/cclover2
	rm -f "$(DESTDIR)"/bin/iclover2
	rm -f "$(DESTDIR)"/share/clover2/*
	rmdir "$(DESTDIR)"/share/clover2

#########################################################
# permission
#########################################################
permission:
	chmod 644 *
	chmod 755 .git man src configure
	chmod 644 src/*.c
	chmod 644 src/*.h
	chmod 755 update_clover.sh

########################################################
# clean
########################################################
clean:
	rm -fR clover2 clover2.dSYM cclover2 cclover2.dSYM iclover2 iclover2.dSYM src/*.o config.log config.status *.stackdump autom4te.cache .DS_Store core.* a.out *.oclcl *.bc *.s *.o *.ocl code/*.ocl code/*.oclcl *.clm a.c src/*.dwo *.ll *.so.1.0.0 *.so *.class
	(cd examples/; make clean)

distclean: clean
	rm -fR  config.h Makefile autom4te.cache

parser:
	./cclover2 CLParser.clcl

########################################################
# test
########################################################
test: parser
	@echo "Compile to test code..."
	./cclover2 code/ListTest.clcl
	./cclover2 code/OperatorTest.clcl
	./cclover2 code/GenericsTest2.clcl;
	./cclover2 code/GenericsTest3.clcl
	./cclover2 code/BlockVarTest.clcl
	./cclover2 code/UserObjectTest.clcl
	./cclover2 code/PointerTest.clcl
	./cclover2 code/PointerTest2.clcl
	./cclover2 code/IncrementTest.clcl
	./cclover2 code/InitializeTest.clcl
	./cclover2 code/StackTest.clcl
	./cclover2 code/ArrayTest.clcl
	./cclover2 code/HelloWorld.clcl
	./cclover2 code/CastTest.clcl
	./cclover2 code/StringTest.clcl
	./cclover2 code/InterfaceTest.clcl
	./cclover2 code/NullTest.clcl
	./cclover2 code/SpecialFieldTest.clcl
	./cclover2 code/SelfClassTest.clcl
	./cclover2 code/ModuleTest.clcl
	./cclover2 code/GenericsTest.clcl
	./cclover2 code/VariablesTest.clcl
	./cclover2 code/BlockTest.clcl
	./cclover2 code/BlockTest2.clcl
	./cclover2 code/BlockTest3.clcl
	./cclover2 code/BlockTest4.clcl
	./cclover2 code/BlockTest5.clcl
	./cclover2 code/InheritTest.clcl
	./cclover2 code/VoidResultTest.clcl
	./cclover2 code/IntegerTest.clcl
	./cclover2 code/TryTest.clcl
	./cclover2 code/NormalBlockTest.clcl
	./cclover2 code/ArrayTest2.clcl
	./cclover2 code/HashTest.clcl
	./cclover2 code/ArrayTest3.clcl
	./cclover2 code/ArrayTest4.clcl
	./cclover2 code/ArrayTest5.clcl
	./cclover2 code/RegexTest.clcl
	./cclover2 code/ListTest2.clcl
	./cclover2 code/ListTest3.clcl
	./cclover2 code/TupleTest.clcl
	./cclover2 code/PrintfTest.clcl
	./cclover2 code/EqualableArrayTest.clcl
	./cclover2 code/BufferTest.clcl
	./cclover2 code/SystemTest.clcl
	./cclover2 code/FloatTest.clcl
	./cclover2 code/NumberTest.clcl
	./cclover2 code/StringTest2.clcl
	./cclover2 code/StringTest3.clcl
	./cclover2 code/CArrayTest.clcl
	./cclover2 code/TimeTest.clcl
	./cclover2 code/FileTest.clcl
	./cclover2 code/DirTest.clcl
	./cclover2 code/CommandTest.clcl
	./cclover2 code/AnonymousTest.clcl
	./cclover2 code/FunTest.clcl
	./cclover2 code/TypeInference.clcl
	./cclover2 code/AnonymousTest2.clcl
	./cclover2 code/KotlinTest.clcl
	./cclover2 code/MethodGenericsTest.clcl
	./cclover2 code/MethodBlock.clcl
	./cclover2 code/ReturnTest.clcl
	./cclover2 code/ResultTypeTest.clcl
	./cclover2 code/IsTest.clcl
	./cclover2 code/NullTest.clcl
	./cclover2 code/DependencyTest.clcl
	./cclover2 code/ObjectTest.clcl
	./cclover2 code/DefaultMethodArgTest.clcl
	./cclover2 code/EnumTest.clcl
	./cclover2 code/ByteTest.clcl
	./cclover2 code/SetterGetterTest.clcl
	./cclover2 code/EFTest.clcl
	./cclover2 code/MethodInternalTest.clcl
	./cclover2 code/WhenTest.clcl
	./cclover2 code/ResultTest.clcl
	./cclover2 code/NumberTest2.clcl
	./cclover2 code/TypeDataTest.clcl
	./cclover2 code/PatternMatchingTest.clcl
	./cclover2 code/ParserTest.clcl
	./cclover2 code/GenericsTest4.clcl
	./cclover2 code/DelegateTest.clcl
	./cclover2 code/RangeTest.clcl
	./cclover2 code/SelfOmittedField.clcl
	./cclover2 code/UnboxingTest.clcl
	./cclover2 code/AndAndOrOrTest.clcl
	./cclover2 code/ClosureTest.clcl
	./cclover2 code/MapTest.clcl
	./cclover2 code/main.cl && ./clover2 code/main.cl

	if locale -a | grep ja_JP.utf8; then export LANG="ja_JP_utf8"; export LC_ALL="ja_JP.utf8"; ./clover2 code/char.cl; else export LANG="C.UTF-8"; export LC_ALL="C.UTF-8"; ./clover2 code/char.cl; fi

	if test `uname` != Darwin; then gcc -shared -Wl,-soname=libExtTest.so.1 -o libExtTest.so.1.0.0 -I src/ -I . -I/usr/local/include -fPIC ext/hello.c; ln -fs libExtTest.so.1.0.0 libExtTest.so; ./cclover2 ext.clcl && ./clover2 ext.cl; fi

