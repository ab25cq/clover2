#######################################################
# installed directories
#######################################################
prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
datadir=@datadir@
mandir=@mandir@
sharedstatedir=@sharedstatedir@
sysconfdir=@sysconfdir@/clover2
includedir=@includedir@/clover2
datarootdir=@datarootdir@/clover2
docdir=@datadir@/doc
libdir=@libdir@


##########################################################
# environmnet variables
##########################################################
CC=@CC@
CXX=@CXX@
INSTALL=@INSTALL@
CFLAGS=@CFLAGS@
CXXFLAGS=@CXXFLAGS@
LIBS=@LIBS@
OS=@OS@
DESTDIR=@DESTDIR@
OBJS=@OBJS@
COMPILER_OBJS=@COMPILER_OBJS@
JIT_OBJS=@JIT_OBJS@
JIT_RUNTIME_OBJS=@JIT_RUNTIME_OBJS@
COMMON_OBJS=@COMMON_OBJS@
INTERPRETER=@INTERPRETER@
JIT=@JIT@
CFFI=@CFFI@
ENABLE_THREAD=@ENABLE_THREAD@
NODEJS=@NODEJS@

##########################################################
# main
##########################################################
all: cclover2 clover2 tyclover2 $(INTERPRETER) SortableArray.oclcl libclover2.so.1.0.0 jit-compile
#	if which ctags > /dev/null; then if test $(OS) = DARWIN; then ctags src/*.c > /dev/null 2>&1; else ctags -R; fi; fi

cclover2: config.h src/compiler.o $(COMMON_OBJS) $(COMPILER_OBJS) $(OBJS) $(JIT_OBJS) $(JIT_RUNTIME_OBJS)
	if test $(JIT) = 1; then $(CXX) -o cclover2 src/compiler.o $(COMMON_OBJS) $(COMPILER_OBJS) $(OBJS:src/class_clover_runtime.o=) $(JIT_OBJS) $(JIT_RUNTIME_OBJS) $(CFLAGS) $(LIBS) $(CXXFLAGS); else $(CC) -o cclover2 src/compiler.o $(COMMON_OBJS) $(COMPILER_OBJS) $(OBJS:src/class_clover_runtime.o=) $(CFLAGS) $(LIBS); fi

src/script_ctime.o: config.h src/script_ctime.c
	$(CC) -c -o src/script_ctime.o src/script_ctime.c $(CFLAGS:-O3=)

clover2: config.h src/main.o $(COMMON_OBJS) $(OBJS) $(JIT_RUNTIME_OBJS)
	if test $(JIT) = 1; then $(CXX) -o clover2 src/main.o $(COMMON_OBJS) $(OBJS) $(JIT_RUNTIME_OBJS) $(CFLAGS) $(LIBS) $(CXXFLAGS); else $(CC) -o clover2 src/main.o $(COMMON_OBJS) $(OBJS) $(CFLAGS) $(LIBS); fi

iclover2: config.h src/interpreter.o $(COMMON_OBJS) $(OBJS) $(COMPILER_OBJS) $(JIT_RUNTIME_OBJS)
	if test $(JIT) = 1; then $(CXX) -o iclover2 src/interpreter.o $(COMMON_OBJS) $(OBJS:src/class_clover_runtime.o=) $(COMPILER_OBJS) $(JIT_RUNTIME_OBJS) $(CFLAGS) $(LIBS) $(CXXFLAGS); else $(CC) -o iclover2 src/interpreter.o $(COMMON_OBJS) $(OBJS:src/class_clover_runtime.o=) $(COMPILER_OBJS) $(CFLAGS) $(LIBS); fi

tyclover2: config.h src/get_type.o $(COMMON_OBJS) $(OBJS) $(COMPILER_OBJS) $(JIT_RUNTIME_OBJS)
	if test $(JIT) = 1; then $(CXX) -o tyclover2 src/get_type.o $(COMMON_OBJS) $(OBJS:src/class_clover_runtime.o=) $(COMPILER_OBJS) $(JIT_RUNTIME_OBJS) $(CFLAGS) $(LIBS) $(CXXFLAGS); else $(CC) -o tyclover2 src/get_type.o $(COMMON_OBJS) $(OBJS:src/class_clover_runtime.o=) $(COMPILER_OBJS) $(CFLAGS) $(LIBS); fi

SortableArray.oclcl: Fundamental.clcl String.clcl Container.clcl Range.clcl Command.clcl File.clcl MyOwnLibrary.clcl CGI.clcl Reflection.clcl Socket.clcl SystemCalls.clcl Thread.clcl CLibrary.clcl JS.clcl
	PWD=`pwd`; ./cclover2 -core Fundamental.clcl
	PWD=`pwd`; ./cclover2 -core Thread.clcl
	PWD=`pwd`; ./cclover2 -core String.clcl
	PWD=`pwd`; ./cclover2 -core Container.clcl
	PWD=`pwd`; ./cclover2 -core Reflection.clcl
	PWD=`pwd`; ./cclover2 -core Range.clcl
	PWD=`pwd`; ./cclover2 -core File.clcl
	PWD=`pwd`; ./cclover2 -core Command.clcl
	PWD=`pwd`; ./cclover2 -core SystemCalls.clcl
	PWD=`pwd`; ./cclover2 -core CLibrary.clcl
	PWD=`pwd`; ./cclover2 -core CGI.clcl
	PWD=`pwd`; ./cclover2 -core Socket.clcl
	PWD=`pwd`; ./cclover2 -core MyOwnLibrary.clcl
	PWD=`pwd`; ./cclover2 -core JS.clcl

	PWD=`pwd`; ./cclover2 -core String.ojsclcl
	PWD=`pwd`; ./cclover2 -core Function.ojsclcl
	PWD=`pwd`; ./cclover2 -core Lambda.ojsclcl
	PWD=`pwd`; ./cclover2 -core Number.ojsclcl
	PWD=`pwd`; ./cclover2 -core Bool.ojsclcl
	PWD=`pwd`; ./cclover2 -core Map.ojsclcl
	PWD=`pwd`; ./cclover2 -core Set.ojsclcl
	PWD=`pwd`; ./cclover2 -core Tuple1.ojsclcl
	PWD=`pwd`; ./cclover2 -core Tuple2.ojsclcl
	PWD=`pwd`; ./cclover2 -core Tuple3.ojsclcl
	PWD=`pwd`; ./cclover2 -core Tuple4.ojsclcl
	PWD=`pwd`; ./cclover2 -core Tuple5.ojsclcl
	PWD=`pwd`; ./cclover2 -core Tuple6.ojsclcl
	PWD=`pwd`; ./cclover2 -core Tuple7.ojsclcl
	PWD=`pwd`; ./cclover2 -core Tuple8.ojsclcl
	PWD=`pwd`; ./cclover2 -core Tuple9.ojsclcl
	PWD=`pwd`; ./cclover2 -core Exception.ojsclcl
	PWD=`pwd`; ./cclover2 -core System.ojsclcl
	PWD=`pwd`; ./cclover2 -core Clover.ojsclcl
	PWD=`pwd`; ./cclover2 -core Array.ojsclcl

libclover2.so.1.0.0: $(COMMON_OBJ) $(COMPILER_OBJS) $(OBJS) $(JIT_RUNTIME_OBJS)
	$(CC) -shared -o libclover2.so.1.0.0 $(COMMON_OBJS) $(COMPILER_OBJS) $(OBJS:src/class_clover_runtime.o=) $(CFLAGS) $(LIBS) $(JIT_RUNTIME_OBJS)
	ln -s -f libclover2.so.1.0.0 libclover2.so.1
	ln -s -f libclover2.so.1.0.0 libclover2.so

#########################################################
# Object files
#########################################################
$(OBJ): src/*.h Makefile configure

#########################################################
# JIT compile
#########################################################
jit-compile: Clover.so PcreOVec.so System.so Global.so Buffer.so Exception.so Byte.so UByte.so Short.so UShort.so Integer.so UInteger.so Long.so ULong.so Float.so Double.so Pointer.so Char.so Bool.so Array.so EqualableArray.so SortableArray.so HashItem.so Hash.so ListItem.so List.so EqualableList.so SortableList.so Tuple1.so Tuple2.so Tuple3.so Tuple4.so Tuple5.so Tuple6.so Tuple7.so Tuple8.so Tuple9.so Tuple10.so Path.so Directory.so termios.so Job.so Command.so String.so File.so Class.so Field.so Method.so MethodParam.so Mutex.so Null.so Range.so Thread.so fd_set.so getopt_long_option.so timespec.so timeval.so tm.so hostent.so in_addr.so pthread_cond_t.so pthread_mutex_t.so servent.so sockaddr_in.so sockaddr_un.so stat.so

Clover.so: Clover.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Clover; fi

PcreOVec.so: PcreOVec.oclcl
	if test $(JIT) = 1; then ./bclover2 -core PcreOVec; fi

System.so: System.oclcl
	if test $(JIT) = 1; then ./bclover2 -core System; fi

Global.so: Global.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Global; fi

Buffer.so: Buffer.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Buffer; fi

Exception.so: Exception.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Exception; fi

Byte.so: Byte.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Byte; fi

UByte.so: UByte.oclcl
	if test $(JIT) = 1; then ./bclover2 -core UByte; fi

Short.so: Short.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Short; fi

UShort.so: UShort.oclcl
	if test $(JIT) = 1; then ./bclover2 -core UShort; fi

Integer.so: Integer.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Integer; fi

UInteger.so: UInteger.oclcl
	if test $(JIT) = 1; then ./bclover2 -core UInteger; fi

Long.so: Long.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Long; fi

ULong.so: ULong.oclcl
	if test $(JIT) = 1; then ./bclover2 -core ULong; fi

Float.so: Float.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Float; fi

Double.so: Double.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Double; fi

Pointer.so: Pointer.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Pointer; fi

Char.so: Char.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Char; fi

Bool.so: Bool.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Bool; fi

Array.so: Array.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Array; fi

EqualableArray.so: EqualableArray.oclcl
	if test $(JIT) = 1; then ./bclover2 -core EqualableArray; fi

SortableArray.so: SortableArray.oclcl
	if test $(JIT) = 1; then ./bclover2 -core SortableArray; fi

HashItem.so: HashItem.oclcl
	if test $(JIT) = 1; then ./bclover2 -core HashItem; fi

Hash.so: Hash.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Hash; fi

ListItem.so: ListItem.oclcl
	if test $(JIT) = 1; then ./bclover2 -core ListItem; fi

List.so: List.oclcl
	if test $(JIT) = 1; then ./bclover2 -core List; fi

EqualableList.so: EqualableList.oclcl
	if test $(JIT) = 1; then ./bclover2 -core EqualableList; fi

SortableList.so: SortableList.oclcl
	if test $(JIT) = 1; then ./bclover2 -core SortableList; fi

Tuple1.so: Tuple1.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Tuple1; fi

Tuple2.so: Tuple2.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Tuple2; fi

Tuple3.so: Tuple3.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Tuple3; fi

Tuple4.so: Tuple4.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Tuple4; fi

Tuple5.so: Tuple5.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Tuple5; fi

Tuple6.so: Tuple6.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Tuple6; fi

Tuple7.so: Tuple7.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Tuple7; fi

Tuple8.so: Tuple8.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Tuple8; fi

Tuple9.so: Tuple9.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Tuple9; fi

Tuple10.so: Tuple10.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Tuple10; fi

Path.so: Path.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Path; fi

Directory.so: Directory.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Directory; fi

termios.so: termios.oclcl
	if test $(JIT) = 1; then ./bclover2 -core termios; fi

Job.so: Job.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Job; fi

Command.so: Command.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Command; fi

String.so: String.oclcl
	if test $(JIT) = 1; then ./bclover2 -core String; fi

File.so: File.oclcl
	if test $(JIT) = 1; then ./bclover2 -core File; fi

Class.so: Class.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Class; fi

Field.so: Field.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Field; fi

Method.so: Method.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Method; fi

MethodParam.so: MethodParam.oclcl
	if test $(JIT) = 1; then ./bclover2 -core MethodParam; fi

Mutex.so: Mutex.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Mutex; fi

Thread.so: Thread.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Thread; fi

fd_set.so: fd_set.oclcl
	if test $(JIT) = 1; then ./bclover2 -core fd_set; fi

getopt_long_option.so: getopt_long_option.oclcl
	if test $(JIT) = 1; then ./bclover2 -core getopt_long_option; fi

Range.so: Range.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Range; fi

stat.so: stat.oclcl
	if test $(JIT) = 1; then ./bclover2 -core stat; fi

tm.so: Command.oclcl
	if test $(JIT) = 1; then ./bclover2 -core tm; fi

timespec.so: timespec.oclcl
	if test $(JIT) = 1; then ./bclover2 -core timespec; fi

hostent.so: hostent.oclcl
	if test $(JIT) = 1; then ./bclover2 -core hostent; fi

in_addr.so: in_addr.oclcl
	if test $(JIT) = 1; then ./bclover2 -core in_addr; fi

pthread_cond_t.so: pthread_cond_t.oclcl
	if test $(JIT) = 1; then ./bclover2 -core pthread_cond_t; fi

pthread_mutex_t.so: pthread_mutex_t.oclcl
	if test $(JIT) = 1; then ./bclover2 -core pthread_mutex_t; fi

servent.so: servent.oclcl
	if test $(JIT) = 1; then ./bclover2 -core servent; fi

sockaddr.so: sockaddr.oclcl
	if test $(JIT) = 1; then ./bclover2 -core sockaddr; fi

sockaddr_in.so: sockaddr_in.oclcl
	if test $(JIT) = 1; then ./bclover2 -core sockaddr_in; fi

sockaddr_un.so: sockaddr_un.oclcl
	if test $(JIT) = 1; then ./bclover2 -core sockaddr_un; fi

timeval.so: timeval.oclcl
	if test $(JIT) = 1; then ./bclover2 -core timeval; fi

Null.so: Null.oclcl
	if test $(JIT) = 1; then ./bclover2 -core Null; fi

#########################################################
# install
#########################################################
install:
	mkdir -p $(DESTDIR)/share/clover2

	$(INSTALL) -m 644 ./CGI.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./CLibrary.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./Command.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./Container.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./File.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./Fundamental.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./JS.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./MyOwnLibrary.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./Range.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./Reflection.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./Socket.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./String.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./SystemCalls.clcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./Thread.clcl $(DESTDIR)/share/clover2

	$(INSTALL) -m 644 ./Clover.oclcl $(DESTDIR)/share/clover2
	if test -e Clover.so; then $(INSTALL) -m 755 ./Clover.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Clover.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./PcreOVec.oclcl $(DESTDIR)/share/clover2
	if test -e PcreOVec.so; then $(INSTALL) -m 755 ./PcreOVec.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./PcreOVec.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./System.oclcl $(DESTDIR)/share/clover2
	if test -e System.so; then $(INSTALL) -m 755 ./System.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./System.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Global.oclcl $(DESTDIR)/share/clover2
	if test -e Global.so; then $(INSTALL) -m 755 ./Global.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Global.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./String.oclcl $(DESTDIR)/share/clover2
	if test -e String.so; then $(INSTALL) -m 755 ./String.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./String.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Buffer.oclcl $(DESTDIR)/share/clover2
	if test -e Buffer.so; then $(INSTALL) -m 755 ./Buffer.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Buffer.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Exception.oclcl $(DESTDIR)/share/clover2
	if test -e Exception.so; then $(INSTALL) -m 755 ./Exception.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Exception.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Byte.oclcl $(DESTDIR)/share/clover2
	if test -e Byte.so; then $(INSTALL) -m 755 ./Byte.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Byte.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./UByte.oclcl $(DESTDIR)/share/clover2
	if test -e UByte.so; then $(INSTALL) -m 755 ./UByte.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./UByte.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Short.oclcl $(DESTDIR)/share/clover2
	if test -e Short.so; then $(INSTALL) -m 755 ./Short.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Short.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./UShort.oclcl $(DESTDIR)/share/clover2
	if test -e UShort.so; then $(INSTALL) -m 755 ./UShort.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./UShort.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Integer.oclcl $(DESTDIR)/share/clover2
	if test -e Integer.so; then $(INSTALL) -m 755 ./Integer.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Integer.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./UInteger.oclcl $(DESTDIR)/share/clover2
	if test -e UInteger.so; then $(INSTALL) -m 755 ./UInteger.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./UInteger.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Long.oclcl $(DESTDIR)/share/clover2
	if test -e Long.so; then $(INSTALL) -m 755 ./Long.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Long.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./ULong.oclcl $(DESTDIR)/share/clover2
	if test -e ULong.so; then $(INSTALL) -m 755 ./ULong.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./ULong.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Float.oclcl $(DESTDIR)/share/clover2
	if test -e Float.so; then $(INSTALL) -m 755 ./Float.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Float.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Double.oclcl $(DESTDIR)/share/clover2
	if test -e Double.so; then $(INSTALL) -m 755 ./Double.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Double.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Pointer.oclcl $(DESTDIR)/share/clover2
	if test -e Pointer.so; then $(INSTALL) -m 755 ./Pointer.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Pointer.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Char.oclcl $(DESTDIR)/share/clover2
	if test -e Char.so; then $(INSTALL) -m 755 ./Char.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Char.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Bool.oclcl $(DESTDIR)/share/clover2
	if test -e Bool.so; then $(INSTALL) -m 755 ./Bool.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Bool.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Array.oclcl $(DESTDIR)/share/clover2
	if test -e Array.so; then $(INSTALL) -m 755 ./Array.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Array.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./EqualableArray.oclcl $(DESTDIR)/share/clover2
	if test -e EqualableArray.so; then $(INSTALL) -m 755 ./EqualableArray.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./EqualableArray.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./SortableArray.oclcl $(DESTDIR)/share/clover2
	if test -e SortableArray.so; then $(INSTALL) -m 755 ./SortableArray.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./SortableArray.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./HashItem.oclcl $(DESTDIR)/share/clover2
	if test -e HashItem.so; then $(INSTALL) -m 755 ./HashItem.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./HashItem.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Hash.oclcl $(DESTDIR)/share/clover2
	if test -e Hash.so; then $(INSTALL) -m 755 ./Hash.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Hash.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./ListItem.oclcl $(DESTDIR)/share/clover2
	if test -e ListItem.so; then $(INSTALL) -m 755 ./ListItem.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./ListItem.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./List.oclcl $(DESTDIR)/share/clover2
	if test -e List.so; then $(INSTALL) -m 755 ./List.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./List.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./EqualableList.oclcl $(DESTDIR)/share/clover2
	if test -e EqualableList.so; then $(INSTALL) -m 755 ./EqualableList.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./EqualableList.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./SortableList.oclcl $(DESTDIR)/share/clover2
	if test -e SortableList.so; then $(INSTALL) -m 755 ./SortableList.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./SortableList.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Tuple1.oclcl $(DESTDIR)/share/clover2
	if test -e Tuple1.so; then $(INSTALL) -m 755 ./Tuple1.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Tuple1.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Tuple2.oclcl $(DESTDIR)/share/clover2
	if test -e Tuple2.so; then $(INSTALL) -m 755 ./Tuple2.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Tuple2.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Tuple3.oclcl $(DESTDIR)/share/clover2
	if test -e Tuple3.so; then $(INSTALL) -m 755 ./Tuple3.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Tuple3.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Tuple4.oclcl $(DESTDIR)/share/clover2
	if test -e Tuple4.so; then $(INSTALL) -m 755 ./Tuple4.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Tuple4.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Tuple5.oclcl $(DESTDIR)/share/clover2
	if test -e Tuple5.so; then $(INSTALL) -m 755 ./Tuple5.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Tuple5.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Tuple6.oclcl $(DESTDIR)/share/clover2
	if test -e Tuple6.so; then $(INSTALL) -m 755 ./Tuple6.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Tuple6.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Tuple7.oclcl $(DESTDIR)/share/clover2
	if test -e Tuple7.so; then $(INSTALL) -m 755 ./Tuple7.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Tuple7.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Tuple8.oclcl $(DESTDIR)/share/clover2
	if test -e Tuple8.so; then $(INSTALL) -m 755 ./Tuple8.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Tuple8.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Tuple9.oclcl $(DESTDIR)/share/clover2
	if test -e Tuple9.so; then $(INSTALL) -m 755 ./Tuple9.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Tuple9.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Tuple10.oclcl $(DESTDIR)/share/clover2
	if test -e Tuple10.so; then $(INSTALL) -m 755 ./Tuple10.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Tuple10.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./File.oclcl $(DESTDIR)/share/clover2
	if test -e File.so; then $(INSTALL) -m 755 ./File.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./File.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Path.oclcl $(DESTDIR)/share/clover2
	if test -e Path.so; then $(INSTALL) -m 755 ./Path.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Path.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Directory.oclcl $(DESTDIR)/share/clover2
	if test -e Directory.so; then $(INSTALL) -m 755 ./Directory.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Directory.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./termios.oclcl $(DESTDIR)/share/clover2
	if test -e termios.so; then $(INSTALL) -m 755 ./termios.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./termios.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Job.oclcl $(DESTDIR)/share/clover2
	if test -e Job.so; then $(INSTALL) -m 755 ./Job.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Job.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Command.oclcl $(DESTDIR)/share/clover2
	if test -e Command.so; then $(INSTALL) -m 755 ./Command.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Command.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./tm.oclcl $(DESTDIR)/share/clover2
	if test -e tm.so; then $(INSTALL) -m 755 ./tm.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./tm.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./timespec.oclcl $(DESTDIR)/share/clover2
	if test -e timespec.so; then $(INSTALL) -m 755 ./timespec.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./timespec.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./stat.oclcl $(DESTDIR)/share/clover2
	if test -e stat.so; then $(INSTALL) -m 755 ./stat.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./stat.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Class.oclcl $(DESTDIR)/share/clover2
	if test -e Class.so; then $(INSTALL) -m 755 ./Class.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Class.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Field.oclcl $(DESTDIR)/share/clover2
	if test -e Field.so; then $(INSTALL) -m 755 ./Field.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Field.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Method.oclcl $(DESTDIR)/share/clover2
	if test -e Method.so; then $(INSTALL) -m 755 ./Method.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Method.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./MethodParam.oclcl $(DESTDIR)/share/clover2
	if test -e MethodParam.so; then $(INSTALL) -m 755 ./MethodParam.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./MethodParam.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Mutex.oclcl $(DESTDIR)/share/clover2
	if test -e Mutex.so; then $(INSTALL) -m 755 ./Mutex.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Mutex.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Range.oclcl $(DESTDIR)/share/clover2
	if test -e Range.so; then $(INSTALL) -m 755 ./Range.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Range.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Thread.oclcl $(DESTDIR)/share/clover2
	if test -e Thread.so; then $(INSTALL) -m 755 ./Thread.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Thread.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./fd_set.oclcl $(DESTDIR)/share/clover2
	if test -e fd_set.so; then $(INSTALL) -m 755 ./fd_set.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./fd_set.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./getopt_long_option.oclcl $(DESTDIR)/share/clover2
	if test -e getopt_long_option.so; then $(INSTALL) -m 755 ./getopt_long_option.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./getopt_long_option.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./hostent.oclcl $(DESTDIR)/share/clover2
	if test -e hostent.so; then $(INSTALL) -m 755 ./hostent.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./hostent.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./in_addr.oclcl $(DESTDIR)/share/clover2
	if test -e in_addr.so; then $(INSTALL) -m 755 ./in_addr.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./in_addr.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./pthread_cond_t.oclcl $(DESTDIR)/share/clover2
	if test -e pthread_cond_t.so; then $(INSTALL) -m 755 ./pthread_cond_t.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./pthread_cond_t.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./pthread_mutex_t.oclcl $(DESTDIR)/share/clover2
	if test -e pthread_mutex_t.so; then $(INSTALL) -m 755 ./pthread_mutex_t.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./pthread_mutex_t.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./servent.oclcl $(DESTDIR)/share/clover2
	if test -e servent.so; then $(INSTALL) -m 755 ./servent.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./servent.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./sockaddr.oclcl $(DESTDIR)/share/clover2
	if test -e sockaddr.so; then $(INSTALL) -m 755 ./sockaddr.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./sockaddr.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./sockaddr_in.oclcl $(DESTDIR)/share/clover2
	if test -e sockaddr_in.so; then $(INSTALL) -m 755 ./sockaddr_in.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./sockaddr_in.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./sockaddr_un.oclcl $(DESTDIR)/share/clover2
	if test -e sockaddr_un.so; then $(INSTALL) -m 755 ./sockaddr_un.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./sockaddr_un.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./timeval.oclcl $(DESTDIR)/share/clover2
	if test -e timeval.so; then $(INSTALL) -m 755 ./timeval.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./timeval.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Null.oclcl $(DESTDIR)/share/clover2
	if test -e Null.so; then $(INSTALL) -m 755 ./Null.so.1.0.0 $(DESTDIR)/share/clover2; cp -a ./Null.so $(DESTDIR)/share/clover2; fi

	$(INSTALL) -m 644 ./Object.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./IEqualable.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./IHashKey.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./IIteratorable.oclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./ISortable.oclcl $(DESTDIR)/share/clover2

	$(INSTALL) -m 644 ./MArray.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./MArray.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./MEqualableArray.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./MEqualableList.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./MInclude.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./MList.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./MPrintOutObject.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./MWrapperClassBase.clm $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ./MWrapperClassBase.clm $(DESTDIR)/share/clover2

	$(INSTALL) -m 644 System.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Clover.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Object.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 String.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Error.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Exception.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Function.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Lambda.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Number.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Bool.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Exception.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Array.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 IEqualable.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 ISortable.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 IIteratorable.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Iterator.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 IHashKey.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Null.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 IteratorResult.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Set.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple1.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple2.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple3.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple4.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple5.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple6.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple7.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple8.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple9.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Map.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Function.ojsclcl $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Document.ojsclcl $(DESTDIR)/share/clover2

	$(INSTALL) -m 644 String.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Array.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Function.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Number.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Bool.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Exception.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Map.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Set.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple1.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple2.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple3.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple4.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple5.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple6.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple7.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple8.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Tuple9.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 System.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Clover.js $(DESTDIR)/share/clover2
	$(INSTALL) -m 644 Lambda.js $(DESTDIR)/share/clover2

	mkdir -p $(DESTDIR)/lib
	$(INSTALL) -m 755 ./libclover2.so.1.0.0 $(DESTDIR)/lib
	$(INSTALL) -m 755 ./libclover2.so.1 $(DESTDIR)/lib
	$(INSTALL) -m 755 ./libclover2.so $(DESTDIR)/lib

	mkdir -p $(DESTDIR)/include/clover2
	$(INSTALL) -m 644 src/common.h $(DESTDIR)/include/clover2/clover2.h
	$(INSTALL) -m 644 src/clover2-buffer.h $(DESTDIR)/include/clover2
	$(INSTALL) -m 644 src/clover2-debug.h $(DESTDIR)/include/clover2
	$(INSTALL) -m 644 src/clover2-macros.h $(DESTDIR)/include/clover2
	$(INSTALL) -m 644 src/clover2-xfunc.h $(DESTDIR)/include/clover2

	mkdir -p $(DESTDIR)/share/man/man1
	$(INSTALL) ./man/clover2.1.gz $(DESTDIR)/share/man/man1

	mkdir -p "$(DESTDIR)/bin"
	$(INSTALL) -m 755 ./clover2 "$(DESTDIR)/bin"
	$(INSTALL) -m 755 ./cclover2 "$(DESTDIR)/bin"
	if test $(JIT) = 1; then $(INSTALL) -m 755 ./bclover2 "$(DESTDIR)/bin"; fi
	if test -e ./iclover2; then $(INSTALL) -m 755 ./iclover2 "$(DESTDIR)/bin"; fi
	if test -e ./tyclover2; then $(INSTALL) -m 755 ./tyclover2 "$(DESTDIR)/bin"; fi

	mkdir -p $(DESTDIR)/share/doc/clover2
	$(INSTALL) -m 644 ./manual/*.md "$(DESTDIR)/share/doc/clover2"

#########################################################
# uninstall
#########################################################
uninstall:
	rm -f "$(DESTDIR)"/bin/clover2
	rm -f "$(DESTDIR)"/bin/cclover2
	rm -f "$(DESTDIR)"/bin/iclover2
	rm -f "$(DESTDIR)"/bin/bclover2
	rm -f "$(DESTDIR)"/bin/tyclover2
	rm -f "$(DESTDIR)"/share/clover2/*
	rmdir "$(DESTDIR)"/share/clover2
	rm -f "$(DESTDIR)"/share/doc/clover2/*
	rmdir "$(DESTDIR)"/share/doc/clover2
	rm -f "$(DESTDIR)"/lib/libclover2.*
	rm -f "$(DESTDIR)"/include/clover2/*
	rmdir "$(DESTDIR)"/include/clover2
	rm -f "$(DESTDIR)"/share/man/man1/clover2.1.gz

#########################################################
# permission
#########################################################
permission:
	chmod 644 *
	chmod 755 .git man src configure
	chmod 644 src/*.c
	chmod 644 src/*.h
	chmod 755 update_clover.sh

########################################################
# clean
########################################################
clean:
	rm -fR clover2 clover2.dSYM cclover2 cclover2.dSYM iclover2 tyclover2 iclover2.dSYM src/*.o config.log config.status *.stackdump autom4te.cache .DS_Store core.* core a.out *.oclcl *.bc *.s *.o *.ocl code/*.ocl code/*.oclcl *.clm a.c src/*.dwo *.ll *.so.1.0.0 *.so *.class src/config.h moveVarDecls.hi moveVarDecls.o moveVarDecls a.lock server_socket *.so.1 ABC *.js code/*.js *.ojsclcl
	(cd examples/; make clean)

distclean: clean
	rm -fR  config.h Makefile autom4te.cache bclover2

########################################################
# test
########################################################
test: 
	@echo "Compile to test code..."
	PWD=`pwd` ./cclover2 code/ListTest.clcl
	PWD=`pwd` ./cclover2 code/OperatorTest.clcl
	PWD=`pwd` ./cclover2 code/GenericsTest2.clcl;
	PWD=`pwd` ./cclover2 code/GenericsTest3.clcl
	PWD=`pwd` ./cclover2 code/GenericsTestX.clcl;
	PWD=`pwd` ./cclover2 code/BlockVarTest.clcl
	PWD=`pwd` ./cclover2 code/UserObjectTest.clcl
	PWD=`pwd` ./cclover2 code/PointerTest.clcl
	PWD=`pwd` ./cclover2 code/PointerTest2.clcl
	PWD=`pwd` ./cclover2 code/IncrementTest.clcl
	PWD=`pwd` ./cclover2 code/InitializeTest.clcl
	PWD=`pwd` ./cclover2 code/StackTest.clcl
	PWD=`pwd` ./cclover2 code/ArrayTest.clcl
	PWD=`pwd` ./cclover2 code/HelloWorld.clcl
	PWD=`pwd` ./cclover2 code/CastTest.clcl
	PWD=`pwd` ./cclover2 code/StringTest.clcl
	PWD=`pwd` ./cclover2 code/InterfaceTest.clcl
	PWD=`pwd` ./cclover2 code/NullTest.clcl
	PWD=`pwd` ./cclover2 code/SpecialFieldTest.clcl
	PWD=`pwd` ./cclover2 code/SelfClassTest.clcl
	PWD=`pwd` ./cclover2 code/ModuleTest.clcl
	PWD=`pwd` ./cclover2 code/GenericsTest.clcl
	PWD=`pwd` ./cclover2 code/VariablesTest.clcl
	PWD=`pwd` ./cclover2 code/BlockTest.clcl
	PWD=`pwd` ./cclover2 code/BlockTest2.clcl
	PWD=`pwd` ./cclover2 code/BlockTest3.clcl
	PWD=`pwd` ./cclover2 code/BlockTest4.clcl
	PWD=`pwd` ./cclover2 code/BlockTest5.clcl
	PWD=`pwd` ./cclover2 code/InheritTest.clcl
	PWD=`pwd` ./cclover2 code/VoidResultTest.clcl
	PWD=`pwd` ./cclover2 code/IntegerTest.clcl
	PWD=`pwd` ./cclover2 code/TryTest.clcl
	PWD=`pwd` ./cclover2 code/NormalBlockTest.clcl
	PWD=`pwd` ./cclover2 code/ArrayTest2.clcl
	PWD=`pwd` ./cclover2 code/HashTest.clcl
	PWD=`pwd` ./cclover2 code/ArrayTest3.clcl
	PWD=`pwd` ./cclover2 code/ArrayTest4.clcl
	PWD=`pwd` ./cclover2 code/ArrayTest5.clcl
	PWD=`pwd` ./cclover2 code/RegexTest.clcl
	PWD=`pwd` ./cclover2 code/ListTest2.clcl
	PWD=`pwd` ./cclover2 code/ListTest3.clcl
	PWD=`pwd` ./cclover2 code/TupleTest.clcl
	PWD=`pwd` ./cclover2 code/PrintfTest.clcl
	PWD=`pwd` ./cclover2 code/EqualableArrayTest.clcl
	PWD=`pwd` ./cclover2 code/BufferTest.clcl
	PWD=`pwd` ./cclover2 code/SystemTest.clcl
	PWD=`pwd` ./cclover2 code/FloatTest.clcl
	PWD=`pwd` ./cclover2 code/NumberTest.clcl
	PWD=`pwd` ./cclover2 code/StringTest2.clcl
	PWD=`pwd` ./cclover2 code/StringTest3.clcl
	PWD=`pwd` ./cclover2 code/CArrayTest.clcl
	PWD=`pwd` ./cclover2 code/TimeTest.clcl
	PWD=`pwd` ./cclover2 code/FileTest.clcl
	PWD=`pwd` ./cclover2 code/DirTest.clcl
	PWD=`pwd` ./cclover2 code/CommandTest.clcl
	PWD=`pwd` ./cclover2 code/CommentTest.clcl
	PWD=`pwd` ./cclover2 code/AnonymousTest.clcl
	PWD=`pwd` ./cclover2 code/FunTest.clcl
	PWD=`pwd` ./cclover2 code/TypeInference.clcl
	PWD=`pwd` ./cclover2 code/AnonymousTest2.clcl
	PWD=`pwd` ./cclover2 code/KotlinTest.clcl
	PWD=`pwd` ./cclover2 code/MethodGenericsTest.clcl
	PWD=`pwd` ./cclover2 code/MethodBlock.clcl
	PWD=`pwd` ./cclover2 code/ReturnTest.clcl
	PWD=`pwd` ./cclover2 code/ResultTypeTest.clcl
	PWD=`pwd` ./cclover2 code/IsTest.clcl
	PWD=`pwd` ./cclover2 code/NullTest.clcl
	PWD=`pwd` ./cclover2 code/TestDep.clcl
	PWD=`pwd` ./cclover2 code/DependencyTest.clcl
	PWD=`pwd` ./cclover2 code/ObjectTest.clcl
	PWD=`pwd` ./cclover2 code/DefaultMethodArgTest.clcl
	PWD=`pwd` ./cclover2 code/EnumTest.clcl
	PWD=`pwd` ./cclover2 code/ByteTest.clcl
	PWD=`pwd` ./cclover2 code/SetterGetterTest.clcl
	PWD=`pwd` ./cclover2 code/E.clcl
	PWD=`pwd` ./cclover2 code/EFTest.clcl
	PWD=`pwd` ./cclover2 code/MethodInternalTest.clcl
	PWD=`pwd` ./cclover2 code/WhenTest.clcl
	PWD=`pwd` ./cclover2 code/ResultTest.clcl
	PWD=`pwd` ./cclover2 code/ResultTest2.clcl
	PWD=`pwd` ./cclover2 code/NumberTest2.clcl
	PWD=`pwd` ./cclover2 code/TypeDataTest.clcl
	PWD=`pwd` ./cclover2 code/PatternMatchingTest.clcl
	PWD=`pwd` ./cclover2 code/GenericsTest4.clcl
	PWD=`pwd` ./cclover2 code/DelegateTest.clcl
	PWD=`pwd` ./cclover2 code/RangeTest.clcl
	PWD=`pwd` ./cclover2 code/SelfOmittedField.clcl
	PWD=`pwd` ./cclover2 code/UnboxingTest.clcl
	PWD=`pwd` ./cclover2 code/AndAndOrOrTest.clcl
	PWD=`pwd` ./cclover2 code/ClosureTest.clcl
	PWD=`pwd` ./cclover2 code/MapTest.clcl
	PWD=`pwd` ./cclover2 code/SystemCallTest.clcl
	PWD=`pwd` ./cclover2 code/ReflectionTest.clcl
	PWD=`pwd` ./cclover2 code/AllocSize.clcl
	PWD=`pwd` ./cclover2 code/CGITest.clcl
	PWD=`pwd` ./cclover2 code/ClassMethodTest.clcl
	PWD=`pwd` ./cclover2 code/SignalTest.clcl
	PWD=`pwd` ./cclover2 code/HereDocument.clcl
	PWD=`pwd` ./cclover2 code/LambdaArrayTest.clcl
	PWD=`pwd` ./cclover2 code/OmitBlockParamTest.clcl
	PWD=`pwd` ./cclover2 code/ObjectCast.clcl
	PWD=`pwd` ./cclover2 code/QuetionOperator.clcl
	PWD=`pwd` ./cclover2 code/MethodDynamicTest.clcl
	PWD=`pwd` ./cclover2 code/MethodDynamicTest2.clcl
	PWD=`pwd` ./cclover2 code/MixinLayers.clcl
	PWD=`pwd` ./cclover2 code/MixinLayers2.clcl

#	if locale -a | grep ja_JP.utf8; then export LANG="ja_JP_utf8"; export LC_ALL="ja_JP.utf8"; PWD=`pwd` ./cclover2 code/CharTest.clcl; if test $(JIT) = 1; then ./bclover2 CharTest.oclcl; fi; PWD=`pwd` ./clover2 code/char.cl; fi

	if test `uname` != Darwin; then gcc -shared -Wl,-soname=libExtTest.so.1 -o libExtTest.so.1.0.0 -I src/ -I . -I/usr/local/include -fPIC ext/hello.c; ln -fs libExtTest.so.1.0.0 libExtTest.so; PWD=`pwd` ./cclover2 ext.clcl && PWD=`pwd` ./clover2 ext.cl; fi

	if test `uname` != Darwin; then gcc -shared -Wl,-soname=ExtensionTest.so.1 -o ExtensionTest.so.1.0.0 -fPIC ExtensionTest.c; ln -fs ExtensionTest.so.1.0.0 ExtensionTest.so; PWD=`pwd` ./cclover2 ExtensionClassTest.clcl; if test $(JIT) = 1; then ./bclover2 ExtensionClassTest.oclcl; fi; PWD=`pwd` ./clover2 ExtensionClassTest.cl; fi

	PWD=`pwd` ./cclover2 code/getopt.cl && ./clover2 code/getopt.cl -a -b -c aaa xxxx gggg
	PWD=`pwd` ./cclover2 code/getopt_long.cl && ./clover2 code/getopt_long.cl -a --break --clear aaa --delete=ggg xxx yyy zzz
	PWD=`pwd` ./cclover2 code/getopt_long_only.cl && ./clover2 code/getopt_long_only.cl -add --break --clear aaa --delete=ggg xxx yyy zzz

	PWD=`pwd` ./cclover2 code/reflection.cl
	PWD=`pwd` ./cclover2 code/MultiLineString.cl
	PWD=`pwd` ./cclover2 code/ClassFieldAndFieldTest.clcl
#	PWD=`pwd` ./cclover2 code/CloneTest.clcl
	if test $(ENABLE_THREAD) = 1; then PWD=`pwd` ./cclover2 code/thread.cl; fi
	PWD=`pwd` ./cclover2 code/SocketTest.clcl
	PWD=`pwd` ./cclover2 code/PointerTest3.clcl
	PWD=`pwd` ./cclover2 code/BoolTest.clcl

	if test $(JIT) = 1; then PWD=`pwd`; ./compile-test-code.sh; fi

	PWD=`pwd` ./clover2 code/reflection.cl
	PWD=`pwd` ./clover2 code/MultiLineString.cl
	PWD=`pwd` ./clover2 code/try.cl

	PWD=`pwd` time ./clover2 code/main.cl
	PWD=`pwd` time ./clover2 code/main2.cl

#	if test $(ENABLE_THREAD) = 1; then PWD=`pwd` ./clover2 code/thread.cl; fi
#	PWD=`pwd` ./clover2 code/SocketTestServer.cl &
#	sleep 2
#	PWD=`pwd` ./clover2 code/SocketTest.cl
#	PWD=`pwd` ./clover2 code/SocketTestServerInet.cl &
#	sleep 2
#	PWD=`pwd` ./clover2 code/SocketTestInet.cl
#	PWD=`pwd` ./clover2 code/SelectTest.cl

js-test:
	PWD=`pwd` ./cclover2 code/Person.clcl
	PWD=`pwd` ./cclover2 Person.ojsclcl
	cp Person.ojsclcl code/
	cp Person.js code/
	cp Exception.js code/
	cp String.js code/
	cp Clover.js code/
	cp System.js code/
	cp Number.js code/
	cp Bool.js code/
	cp Map.js code/
	cp Set.js code/
	cp Tuple1.js code/
	cp Tuple2.js code/
	cp Tuple3.js code/
	cp Tuple4.js code/
	cp Tuple5.js code/
	cp Tuple6.js code/
	cp Tuple7.js code/
	cp Tuple8.js code/
	cp Tuple9.js code/
	cp Lambda.js code/
	cp Exception.js code/
	PWD=`pwd` ./cclover2 code/js.jscl
	PWD=`pwd` ./cclover2 code/js.ojscl
	PWD=`pwd` $(NODEJS) code/js.js

