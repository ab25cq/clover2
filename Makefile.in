#######################################################
# installed directories
#######################################################
prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
datadir=@datadir@
mandir=@mandir@
sharedstatedir=@sharedstatedir@
sysconfdir=@sysconfdir@/clover2
includedir=@includedir@/clover2
datarootdir=@datarootdir@/clover2
docdir=@datadir@/doc

##########################################################
# environmnet variables
##########################################################
CC=@CC@
CXX=@CXX@
INSTALL=@INSTALL@
CFLAGS=@CFLAGS@
CXXFLAGS=@CXXFLAGS@
LIBS=@LIBS@
OS=@OS@
OBJS=@OBJS@
COMPILER_OBJS=@COMPILER_OBJS@
JIT_OBJS=@JIT_OBJS@
JIT_RUNTIME_OBJS=@JIT_RUNTIME_OBJS@
COMMON_OBJS=@COMMON_OBJS@
INTERPRETER=@INTERPRETER@
JIT=@JIT@

##########################################################
# main
##########################################################
all: cclover2 clover2 $(INTERPRETER)
	if which ctags > /dev/null; then if test $(OS) = DARWIN; then ctags src/*.c > /dev/null 2>&1; else ctags -R; fi; fi

cclover2: config.h src/compiler.o $(COMMON_OBJS) $(COMPILER_OBJS) $(JIT_OBJS)
	if test $(JIT) = 1; then $(CXX) -o cclover2 src/compiler.o $(COMMON_OBJS) $(COMPILER_OBJS) $(JIT_OBJS) $(CFLAGS) $(LIBS) $(CXXFLAGS); else $(CC) -o cclover2 src/compiler.o $(COMMON_OBJS) $(COMPILER_OBJS) $(CFLAGS) $(LIBS); fi

src/script_ctime.o: config.h src/script_ctime.c
	$(CC) -c -o src/script_ctime.o src/script_ctime.c $(CFLAGS:-O3=)

clover2: config.h src/main.o $(COMMON_OBJS) $(OBJS) $(JIT_RUNTIME_OBJS)
	if test $(JIT) = 1; then $(CXX) -o clover2 src/main.o $(COMMON_OBJS) $(OBJS) $(JIT_RUNTIME_OBJS) $(CFLAGS) $(LIBS) $(CXXFLAGS); else $(CC) -o clover2 src/main.o $(COMMON_OBJS) $(OBJS) $(CFLAGS) $(LIBS); fi

iclover2: config.h src/interpreter.o $(COMMON_OBJS) $(OBJS) $(COMPILER_OBJS) $(JIT_RUNTIME_OBJS)
	if test $(JIT) = 1; then $(CXX) -o iclover2 src/interpreter.o $(COMMON_OBJS) $(OBJS) $(COMPILER_OBJS) $(JIT_RUNTIME_OBJS) $(CFLAGS) $(LIBS) $(CXXFLAGS); else $(CC) -o iclover2 src/interpreter.o $(COMMON_OBJS) $(OBJS) $(COMPILER_OBJS) $(CFLAGS) $(LIBS); fi

#########################################################
# Object files
#########################################################
$(OBJ): src/*.h Makefile configure

#########################################################
# install
#########################################################
install:
	rm -f ./*.clcl
	./cclover2 -no-load-fundamental-classes -class Fundamental.clc
	./cclover2 -no-load-fundamental-classes -class Container.clc
	./cclover2 -no-load-fundamental-classes -class String.clc
	./cclover2 -no-load-fundamental-classes -class File.clc
	./cclover2 -no-load-fundamental-classes -class Command.clc
	./cclover2 -no-load-fundamental-classes -class MyOwnLibrary.clc

	mkdir -p ~/.clover2
	$(INSTALL) -m 644 PcreOVec.clcl ~/.clover2
	$(INSTALL) -m 644 System.clcl ~/.clover2
	$(INSTALL) -m 644 Clover.clcl ~/.clover2
	$(INSTALL) -m 644 Global.clcl ~/.clover2
	$(INSTALL) -m 644 String.clcl ~/.clover2
	$(INSTALL) -m 644 Buffer.clcl ~/.clover2
	$(INSTALL) -m 644 Exception.clcl ~/.clover2
	$(INSTALL) -m 644 Object.clcl ~/.clover2
	$(INSTALL) -m 644 Byte.clcl ~/.clover2
	$(INSTALL) -m 644 UByte.clcl ~/.clover2
	$(INSTALL) -m 644 Short.clcl ~/.clover2
	$(INSTALL) -m 644 UShort.clcl ~/.clover2
	$(INSTALL) -m 644 Integer.clcl ~/.clover2
	$(INSTALL) -m 644 UInteger.clcl ~/.clover2
	$(INSTALL) -m 644 Long.clcl ~/.clover2
	$(INSTALL) -m 644 ULong.clcl ~/.clover2
	$(INSTALL) -m 644 Float.clcl ~/.clover2
	$(INSTALL) -m 644 Double.clcl ~/.clover2
	$(INSTALL) -m 644 Pointer.clcl ~/.clover2
	$(INSTALL) -m 644 Char.clcl ~/.clover2
	$(INSTALL) -m 644 Bool.clcl ~/.clover2
	$(INSTALL) -m 644 Array.clcl ~/.clover2
	$(INSTALL) -m 644 EqualableArray.clcl ~/.clover2
	$(INSTALL) -m 644 SortableArray.clcl ~/.clover2
	$(INSTALL) -m 644 IHashKey.clcl ~/.clover2
	$(INSTALL) -m 644 IEqualable.clcl ~/.clover2
	$(INSTALL) -m 644 ISortable.clcl ~/.clover2
	$(INSTALL) -m 644 HashItem.clcl ~/.clover2
	$(INSTALL) -m 644 Hash.clcl ~/.clover2
	$(INSTALL) -m 644 ListItem.clcl ~/.clover2
	$(INSTALL) -m 644 List.clcl ~/.clover2
	$(INSTALL) -m 644 EqualableList.clcl ~/.clover2
	$(INSTALL) -m 644 SortableList.clcl ~/.clover2
	$(INSTALL) -m 644 Tuple1.clcl ~/.clover2
	$(INSTALL) -m 644 Tuple2.clcl ~/.clover2
	$(INSTALL) -m 644 Tuple3.clcl ~/.clover2
	$(INSTALL) -m 644 Tuple4.clcl ~/.clover2
	$(INSTALL) -m 644 Tuple5.clcl ~/.clover2
	$(INSTALL) -m 644 Tuple6.clcl ~/.clover2
	$(INSTALL) -m 644 Tuple7.clcl ~/.clover2
	$(INSTALL) -m 644 Tuple8.clcl ~/.clover2
	$(INSTALL) -m 644 Tuple9.clcl ~/.clover2
	$(INSTALL) -m 644 Tuple10.clcl ~/.clover2
	$(INSTALL) -m 644 File.clcl ~/.clover2
	$(INSTALL) -m 644 Path.clcl ~/.clover2
	$(INSTALL) -m 644 Directory.clcl ~/.clover2
	$(INSTALL) -m 644 termios.clcl ~/.clover2
	$(INSTALL) -m 644 Job.clcl ~/.clover2
	$(INSTALL) -m 644 Command.clcl ~/.clover2
	$(INSTALL) -m 644 tm.clcl ~/.clover2
	$(INSTALL) -m 644 timespec.clcl ~/.clover2
	$(INSTALL) -m 644 stat.clcl ~/.clover2

	if test $(JIT) = 1;then llvm-dis Clover.bc && $(INSTALL) -m 644 Clover.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Global.bc && $(INSTALL) -m 644 Global.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis String.bc && $(INSTALL) -m 644 String.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Buffer.bc && $(INSTALL) -m 644 Buffer.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Byte.bc && $(INSTALL) -m 644 Byte.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis UByte.bc && $(INSTALL) -m 644 UByte.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Short.bc && $(INSTALL) -m 644 Short.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis UShort.bc && $(INSTALL) -m 644 UShort.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Integer.bc && $(INSTALL) -m 644 Integer.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis UInteger.bc && $(INSTALL) -m 644 UInteger.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Long.bc && $(INSTALL) -m 644 Long.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis ULong.bc && $(INSTALL) -m 644 ULong.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Float.bc && $(INSTALL) -m 644 Float.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Double.bc && $(INSTALL) -m 644 Double.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Pointer.bc && $(INSTALL) -m 644 Pointer.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Char.bc && $(INSTALL) -m 644 Char.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Bool.bc && $(INSTALL) -m 644 Bool.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Array.bc && $(INSTALL) -m 644 Array.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis EqualableArray.bc && $(INSTALL) -m 644 EqualableArray.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis SortableArray.bc && $(INSTALL) -m 644 SortableArray.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Hash.bc && $(INSTALL) -m 644 Hash.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis List.bc && $(INSTALL) -m 644 List.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis EqualableList.bc && $(INSTALL) -m 644 EqualableList.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis SortableList.bc && $(INSTALL) -m 644 SortableList.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Tuple1.bc && $(INSTALL) -m 644 Tuple1.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Tuple2.bc && $(INSTALL) -m 644 Tuple2.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Tuple3.bc && $(INSTALL) -m 644 Tuple3.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Tuple4.bc && $(INSTALL) -m 644 Tuple4.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Tuple5.bc && $(INSTALL) -m 644 Tuple5.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Tuple6.bc && $(INSTALL) -m 644 Tuple6.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Tuple7.bc && $(INSTALL) -m 644 Tuple7.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Tuple8.bc && $(INSTALL) -m 644 Tuple8.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Tuple9.bc && $(INSTALL) -m 644 Tuple9.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Tuple10.bc && $(INSTALL) -m 644 Tuple10.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis File.bc && $(INSTALL) -m 644 File.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Path.bc && $(INSTALL) -m 644 Path.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Directory.bc && $(INSTALL) -m 644 Directory.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Job.bc && $(INSTALL) -m 644 Job.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis Command.bc && $(INSTALL) -m 644 Command.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis tm.bc && $(INSTALL) -m 644 tm.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis timespec.bc && $(INSTALL) -m 644 timespec.bc ~/.clover2; fi
	if test $(JIT) = 1;then llvm-dis stat.bc && $(INSTALL) -m 644 stat.bc ~/.clover2; fi

	$(INSTALL) -m 644 MArrayImplement.clm ~/.clover2
	$(INSTALL) -m 644 MEqualableArrayImplement.clm ~/.clover2
	$(INSTALL) -m 644 MEqualableListImplementation.clm ~/.clover2
	$(INSTALL) -m 644 MInclude.clm ~/.clover2
	$(INSTALL) -m 644 MListImplementation.clm ~/.clover2
	$(INSTALL) -m 644 MPrintOutObject.clm ~/.clover2
	$(INSTALL) -m 644 MWrapperClassBase.clm ~/.clover2

	mkdir -p "$(bindir)"
	$(INSTALL) -m 755 clover2 "$(bindir)"
	$(INSTALL) -m 755 cclover2 "$(bindir)"
	if test -e ./iclover2; then $(INSTALL) -m 755 iclover2 "$(bindir)"; fi

#########################################################
# uninstall
#########################################################
uninstall:
	rm -Rf ~/.clover2
	rm -f "$(bindir)"/clover2
	rm -f "$(bindir)"/cclover2
	rm -f "$(bindir)"/iclover2

#########################################################
# permission
#########################################################
permission:
	chmod 644 *
	chmod 755 .git man src configure
	chmod 644 src/*.c
	chmod 644 src/*.h
	chmod 755 update_clover.sh

########################################################
# clean
########################################################
clean:
	rm -fR clover2 clover2.dSYM cclover2 cclover2.dSYM iclover2 iclover2.dSYM src/*.o config.log config.status *.stackdump autom4te.cache .DS_Store core.* a.out *.clcl *.bc *.s *.o *.clo code/*.clo *.clm a.c src/*.dwo *.ll

distclean: clean
	rm -fR  config.h Makefile autom4te.cache

########################################################
# test
########################################################
test:
	@echo "Compile to test code..."
	./cclover2 -class code/operator.clc && ./cclover2 code/operator.cl && ./clover2 code/operator.clo
	./cclover2 -class code/generics2.clc && ./cclover2 code/generics2.cl && ./clover2 code/generics2.clo
	./cclover2 -class code/generics3.clc && ./cclover2 code/generics3.cl && ./clover2 code/generics3.clo
	./cclover2 code/block_var_test.cl && ./clover2 code/block_var_test.clo
	./cclover2 -class code/user_object.clc && ./cclover2 code/user_object.cl && ./clover2 code/user_object.clo
	./cclover2 code/pointer.cl && ./clover2 code/pointer.clo
	./cclover2 -class code/pointer2.clc && ./cclover2 code/pointer2.cl && ./clover2 code/pointer2.clo
	./cclover2 -class code/increment.clc && ./cclover2 code/increment.cl && ./clover2 code/increment.clo
	./cclover2 -class code/initialize_test.clc && ./cclover2 code/initialize_test.cl && ./clover2 code/initialize_test.clo
	./cclover2 -class code/stack.clc && ./cclover2 code/stack.cl && ./clover2 code/stack.clo
	./cclover2 code/array.cl && ./clover2 code/array.clo
	if locale -a | grep ja_JP.utf8; then export LANG="ja_JP_utf8"; export LC_ALL="ja_JP.utf8"; ./cclover2 code/char.cl && ./clover2 code/char.clo; else export LANG="C.UTF-8"; export LC_ALL="C.UTF-8"; ./cclover2 code/char.cl && ./clover2 code/char.clo; fi
	./cclover2 code/hello_world.cl && ./clover2 code/hello_world.clo
	./cclover2 code/cast.cl && ./clover2 code/cast.clo
	./cclover2 code/string.cl && ./clover2 code/string.clo
	./cclover2 -class code/interface.clc && ./cclover2 code/interface.cl && ./clover2 code/interface.clo
	./cclover2 code/null.cl && ./clover2 code/null.clo
	./cclover2 code/special_field.cl && ./clover2 code/special_field.clo
	./cclover2 -class code/self_class.clc && ./cclover2 code/self_class.cl && ./clover2 code/self_class.clo
	./cclover2 -class code/module.clc && ./cclover2 code/module.cl && ./clover2 code/module.clo
	./cclover2 -class code/generics.clc && ./cclover2 code/generics.cl && ./clover2 code/generics.clo
	./cclover2 code/variables.cl && ./clover2 code/variables.clo
	./cclover2 code/block.cl && ./clover2 code/block.clo
	./cclover2 -class code/block2.clc && ./cclover2 code/block2.cl && ./clover2 code/block2.clo
	./cclover2 -class code/block3.clc && ./cclover2 code/block3.cl && ./clover2 code/block3.clo
	./cclover2 -class code/void_result.clc && ./cclover2 code/void_result.cl && ./clover2 code/void_result.clo
	./cclover2 code/integer.cl && ./clover2 code/integer.clo
	./cclover2 code/normal_block.cl && ./clover2 code/normal_block.clo
	./cclover2 -class code/try.clc && ./cclover2 code/try.cl && ./clover2 code/try.clo
	./cclover2 code/array2.cl && ./clover2 code/array2.clo
	./cclover2 code/hash.cl && ./clover2 code/hash.clo
	./cclover2 -class code/array4.clc && ./cclover2 code/array4.cl && ./clover2 code/array4.clo
	./cclover2 code/regex.cl && ./clover2 code/regex.clo
	./cclover2 code/list.cl && ./clover2 code/list.clo
	./cclover2 code/tuple.cl && ./clover2 code/tuple.clo
	./cclover2 code/printf.cl && ./clover2 code/printf.clo
	./cclover2 code/array5.cl && ./clover2 code/array5.clo
	./cclover2 -class code/equalable_array.clc && ./cclover2 code/equalable_array.cl && ./clover2 code/equalable_array.clo
	./cclover2 code/buffer.cl && ./clover2 code/buffer.clo
	./cclover2 code/system_test.cl && ./clover2 code/system_test.clo
	./cclover2 -class code/inherit.clc && ./cclover2 -class code/inherit2.clc && ./cclover2 code/inherit.cl && ./clover2 code/inherit.clo
	./cclover2 code/float.cl && ./clover2 code/float.clo
	./cclover2 code/number.cl && ./clover2 code/number.clo
	./cclover2 code/string2.cl && ./clover2 code/string2.clo
	./cclover2 code/carray.cl && ./clover2 code/carray.clo
	./cclover2 code/list2.cl && ./clover2 code/list2.clo
	./cclover2 code/time.cl && ./clover2 code/time.clo
	./cclover2 code/file.cl && ./clover2 code/file.clo
	./cclover2 code/dir.cl && ./clover2 code/dir.clo
	./cclover2 code/command.cl && ./clover2 code/command.clo
	./cclover2 code/closure.cl && ./clover2 code/closure.clo
	./cclover2 code/anonymous.cl && ./clover2 code/anonymous.clo

