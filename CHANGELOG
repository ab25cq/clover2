
version 3.7.5

    コンパイル時スクリプティング機能が入りました。リフレクション機能が入りました。

version 3.7.5
    
    Added Compile time scripting and Reflection.

version 3.7.4

    getppid, setsid, getsid, setpgrp, setpigdをSystemクラスに追加しました。

    REPLで配列に対するメソッドコールの補完にバグが有りました。修正。

version 3.7.4

    Added getppid, setsid, getsid, setpgrp, setpigd to System Class
    
    There was a bug in completing method calls for arrays in REPL. Fix.

version 3.7.3

    hashの値の表現に簡易表現を追加しました。a:Hash<String,Integer> = [ "AAA":2, "BBB":3 ]はコンパイルが通ります。

version 3.7.3

    simplified expression was added to the expression of the value of hash. a: Hash <String, Integer> = ["AAA": 2, "BBB": 3] is compiled

version 3.7.2

    変数への数値の代入時にint --> floatなどdoubleやfloatの場合は自動変換しなくなりました。
    (int --> long)などは暗黙のキャストが行われます

version 3.7.2

    When assigning a numeric value to a variable, it does not automatically convert to double or float such as int -> float. (int -> long) etc. are implicitly cast

version 3.7.1

    ローカル変数の多重代入を入れました。

    > (a, b) := (1,2)
    > (a, b) = (b, a)

    タプルの表記で簡単なものを追加しました。

    (1,"AAA", 1.1)  # == Tuple<Integer, String, Double>

version 3.7.1

    Added Multiple Assignements for local variables

    > (a, b) := (1,2)
    > (a, b) = (b, a)

    An easy thing was added by the notation of a tuple

    > (1,"AAA", 1.1)  # == Tuple<Integer, String, Double>

version 3.7.0

    コマンドライン引数のバグを修正。

    System.getopt, System.getopt_long, System.getopt_long_onlyを追加。

    -clean, --version, -versionオプションの廃止（-> 同名のコマンドライン引数が取れなくなるため)

version 3.7.0

    Fixed command line argument bug.

    System.getopt, System.getopt_long, System.getopt_long_only added.

    -clean, --version, -version option is deprecated (-> command line argument of the same name can not be taken)

version 3.6.9
    
    whenにパターンマッチングが入りました。以下のように使います。

    e := new Array<String>();

    f := when(e.className()) {
        match /.+<String>/: {
            123;
        }
        else {
            456;
        }
    }

    Clover.test("when test5", f == 123);

version 3.6.9

    Pattern matching has been entered into when. I use it as follows.

    e := new Array<String>();

    f := when(e.className()) {
        match /.+<String>/: {
            123;
        }
        else {
            456;
        }
    }

    Clover.test("when test5", f == 123);

version 3.6.8

    メモリリークといくつかのバグを修正しました。

version 3.6.8

    Fixed some bugs and memory leak.

version 3.6.7

    コマンドのサスペンドがversion 3.6.3でバグになっていました。修正。

version 3.6.7

    The command suspend was a bug in version 3.6.3. Fix.

version 3.6.6

    cd コマンドを実行した時に環境変数PWDを設定するようになりました。

    System.setenvの戻り値をBufferからStringに変更しました

version 3.6.6

    The environment variable PWD is now set when the cd command is executed.

    System.setenv's return value changed from Buffer to String

version 3.6.5

    REPLの補完のバグを修正。

version 3.6.5

    Fixed REPL complementary bug.

version 3.6.4

    プリミティブ型じゃない配列に対するメソッドコールのバグを修正。

    REPLの補完のバグを修正。

    Clover.ARGV, ARGC, VERSIONを追加。

version 3.6.4

    Fixed a bug in method calls for arrays that are not primitive types.

    Fixed REPL complementary bug.

    Added Clover.ARGV and ARGC, VERSION.

version 3.6.3

    System.mbstowcs, System.wcstombsのAPIの変更。詳しくはString.clclを見てください。

    System.tcgetatter, System.cfmakerawのAPIの変更。詳しくはCommand.clclを見てください。

    REPLの補完のバグを修正。

version 3.6.3

    System.mbstowcs, System.wcstombs API changes. See String.clcl for details.
    System.tcgetatter, System.cfmakeraw API change. See Command.clcl for details.

    Fixed REPL complementary bug.

version 3.6.2

    Systemクラスのクラス名を省略できるようになりました。

    各種システムコールの追加

version 3.6.2

    The class name of System class can be omitted.

    Addition of various system calls

version 3.6.1
    
    ポインタの演算子の右辺値はulongじゃなくても大丈夫になりました。a := 1; b := &a; b += 4は動きます。

version 3.6.1

    The right side value of the operator of the pointer is okay if it is not ulong. a: = 1; b: = & a; b + = 4 works.

version 3.6.0

    ファイルクラスにnew File("fname.txt", "w");などを入れました。内部的にはfopenやfwrite, freadされてバッファリングされます。

version 3.6.0

    I put new File ("fname.txt", "w"); etc in the file class. Internally it is fopen, fwrite, fread and buffered.

version 3.5.9

    メソッドの引数で数値型の変換は暗黙で行われるようになりました。int --> ulongなど。

version 3.5.9

    Numeric type conversion is now implicit in method arguments. int -> ulong and so on.

version 3.5.8

    configureの他のCPUへの対応やディレクトリ内のファイルの整理をしました。

versioin 3.5.8

    I configured configure and handle other CPUs and organize files in the directory.

version 3.5.7

    unset 変数名という命令を加えました。変数の宣言を取り消します。

    PowerPCに対応しました。

version 3.5.7

    We added an instruction called unset variable name. Cancel the variable declaration.

    It corresponds to PowerPC.

